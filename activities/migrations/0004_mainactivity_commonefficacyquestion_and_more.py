# Generated by Django 5.1.3 on 2024-12-27 13:31

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('activities', '0003_remove_exercise_exercise_objective_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MainActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_name', models.CharField(max_length=100)),
                ('activity_code', models.CharField(max_length=10)),
                ('description', models.TextField()),
                ('mode', models.CharField(choices=[('Online', 'Online'), ('Video', 'Video'), ('Physical', 'Physical')], max_length=10)),
                ('duration_minutes', models.FloatField(help_text='Duration in minutes')),
                ('deadline', models.DateTimeField(help_text='Submission deadline')),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='activities.activity')),
            ],
        ),
        migrations.CreateModel(
            name='CommonEfficacyQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=255, verbose_name='Question Text')),
                ('is_active', models.BooleanField(default=True, help_text='Is this question active?')),
            ],
        ),
        migrations.RenameField(
            model_name='submission',
            old_name='uploaded_file',
            new_name='submission_file',
        ),
        migrations.RenameField(
            model_name='submission',
            old_name='submission_time',
            new_name='submitted_at',
        ),
        migrations.RemoveField(
            model_name='submission',
            name='is_reviewed',
        ),
        migrations.RemoveField(
            model_name='submission',
            name='user',
        ),
        migrations.AddField(
            model_name='submission',
            name='activity',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='activities.activity'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='submission',
            name='end_time',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='submission',
            name='feedback',
            field=models.TextField(blank=True, help_text='Optional feedback.', null=True),
        ),
        migrations.AddField(
            model_name='submission',
            name='marks',
            field=models.FloatField(blank=True, help_text='Marks awarded.', null=True),
        ),
        migrations.AddField(
            model_name='submission',
            name='on_time_completion',
            field=models.BooleanField(default=False, verbose_name='Submitted On Time'),
        ),
        migrations.AddField(
            model_name='submission',
            name='student',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to=settings.AUTH_USER_MODEL),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='gradingrubric',
            name='activity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rubrics', to='activities.activity'),
        ),
        migrations.AlterField(
            model_name='quiz',
            name='activity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quizzes', to='activities.activity'),
        ),
        migrations.AlterField(
            model_name='submission',
            name='exercise',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='activities.exercise'),
        ),
        migrations.CreateModel(
            name='AssessmentActivity',
            fields=[
                ('mainactivity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='activities.mainactivity')),
                ('assessment_type', models.CharField(choices=[('MCQ', 'MCQ'), ('Presentation', 'Presentation'), ('Project', 'Project'), ('Demonstration', 'Demonstration'), ('Assignment', 'Assignment')], max_length=100)),
                ('max_marks', models.FloatField(help_text='Maximum marks for the assessment.')),
            ],
            bases=('activities.mainactivity',),
        ),
        migrations.CreateModel(
            name='LearningActivity',
            fields=[
                ('mainactivity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='activities.mainactivity')),
                ('learning_goal', models.TextField(help_text='Learning goal or outcome.')),
                ('is_required', models.BooleanField(default=True, help_text='Whether this activity is mandatory.')),
            ],
            bases=('activities.mainactivity',),
        ),
        migrations.CreateModel(
            name='PracticingActivity',
            fields=[
                ('mainactivity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='activities.mainactivity')),
                ('practice_type', models.CharField(help_text='Type of practice (e.g., Individual, Group).', max_length=100)),
                ('is_assessment_related', models.BooleanField(default=False, help_text='Linked to assessments.')),
            ],
            bases=('activities.mainactivity',),
        ),
        migrations.AddField(
            model_name='mainactivity',
            name='efficacy_questions',
            field=models.ManyToManyField(blank=True, to='activities.commonefficacyquestion'),
        ),
        migrations.CreateModel(
            name='MarksTracker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('daily_marks', models.FloatField(default=0.0)),
                ('weekly_marks', models.FloatField(default=0.0)),
                ('monthly_marks', models.FloatField(default=0.0)),
                ('course_wise_marks', models.FloatField(default=0.0)),
                ('final_grade', models.CharField(blank=True, max_length=10)),
                ('final_assessment_score', models.FloatField(blank=True, null=True)),
                ('tasks_completed', models.IntegerField(default=0)),
                ('exercises_completed', models.IntegerField(default=0)),
                ('on_time_completion', models.BooleanField(default=False)),
                ('practical_hours', models.FloatField(default=0.0)),
                ('theory_hours', models.FloatField(default=0.0)),
                ('num_of_prev_attempts', models.IntegerField(default=0)),
                ('industry_training_experience', models.FloatField(default=0.0)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='marks', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
